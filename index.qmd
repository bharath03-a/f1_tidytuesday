---
title: "F1 Analysis"
author: "Bharath Velamala"
description: "Data Visualization using R on tidyTuesday dataset"
format: 
  html:
      code-tools: true
      code-link: true
      code-fold: true
toc: true
categories: 
  - R
  - DataViz
  - TidyTuesday
---

# Formula 1 Races

The data this week comes from the [Ergast API](https://ergast.com/mrd/db/#csv), which has a CC-BY license. H/t to [Sara Stoudt](https://github.com/rfordatascience/tidytuesday/issues/372) for sharing the link to the data by way of [Data is Plural](https://www.data-is-plural.com/archive/2021-08-25-edition/)!

[FiveThirtyEight](https://fivethirtyeight.com/features/formula-one-racing/) published a nice article on "Who's The Best Formula One Driver Of All Time?". While the ELO data is not present in this dataset, you could calculate your own rating or using the [`{elo}`](https://github.com/eheinzen/elo) package to create ELO scores.

## Set up

```{r load_libraries, warning=FALSE, message=FALSE, output=FALSE}
#| code-fold: true

### GETTING THE LIBRARIES
if (!require(pacman)) #<1>
  install.packages(pacman)


pacman::p_load(tidyverse,
               tidytuesdayR,
               dplyr,
               here,
               dlookr,
               formattable,
               ggiraph,
               plotly)   #<2>
pacman::p_load_gh("wilkelab/ungeviz")
```

Setting the default theme ggplot and output options for the chunk - as suggested in the class.

```{r set_theme, warning=FALSE, message=FALSE}
#| code-fold: true

### setting theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14, base_family = "sans"))


# setting width of code output
options(width = 65)

# setting figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 8,        # 8" width
  fig.height = 9,
  fig.asp = 0.618,      # the golden ratio
  fig.retina = 2,       # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 2000             # higher dpi, sharper image
)
```

## Getting Data

```{r f1_data, warning=FALSE, message=FALSE}
results <- read_csv(here("data", "results.csv"))
driver_standings <- read_csv(here("data", "driver_standings.csv"))
races <- read_csv(here("data", "races.csv"))
drivers <- read_csv(here("data", "drivers.csv"))
```

```{r driver_results, warning=FALSE, message=FALSE}
driver_results_df <- driver_standings |>
  left_join(races, by = "raceId") |>
  rename(driver_url = url) |>
  left_join(drivers, by = "driverId") |> filter( year >= 2021)

missing_count <- colSums(is.na(driver_results_df))

missing_count
```

## Questions

#### Who's the youngest F1 driver with the most wins? Who's the oldest F1 driver in the history of the sport? And who's everyone in between?

::: callout-note
Getting only data after 2021 for relevancy!
:::

As of now the unknowns are age of the drivers, and their position in the races. We need to two new columns to cater that data.

```{r f1_functions, warning=FALSE, message=FALSE}
calculateAge <- function(dob, date) {
  # Convert DOB to Date class
  dob <- as.Date(dob)
  race_date <- as.Date(date)
  
  # Calculate age
  age <- as.integer(difftime(race_date, dob, units = "days"))
  
  return(age)
}

getRacePos <- function(position) {
  case_when(
    position == 1 ~ "WINNER",
    (position > 1 & position <=3) ~ "PODIUM",
    (position > 3 & position <=10) ~ "TOP10",
    TRUE ~ "Other"  # Default case when none of the above conditions are met
  )
}
```

```{r data_preprocessing, warning=FALSE, message=FALSE}
driver_results_df <- driver_results_df |>
  mutate(
    drivers_age = calculateAge(driver_results_df$dob, driver_results_df$date),
    race_pos = getRacePos(driver_results_df$position)
  )
```

```{r initial_plot, warning=FALSE, message=FALSE, fig.height=10}
f1_plot =
  ggplot(driver_results_df, mapping = aes(x = drivers_age, y = code)) +
  geom_point_interactive(
    aes(
      color =,
      tooltip = name
    ),
    shape = 108,
    size = 20
  )

girafe(ggobj = f1_plot)
```
